[
	{id: "cpp", text: "C++编程"},
		
	{id: "CPPBase", text: "C++基础编程",   pid: "cpp" },
			
	{id: "CPPBasic", text: "C++11学习之右值引用", url:"C++11学习之右值引用和移动语义详解.html",   pid: "CPPBase"},			
        {id: "CPPRALL", text: "C++智能指针及其应用", url:"再次谈谈C++语言中的智能指针.html" ,  pid: "CPPBase"},
        {id: "CPPBase3", text: "开源一个线程安全的智能指针", url:"开源一个线程安全的智能指针.html" ,  pid: "CPPBase"},
		{id: "CPPBase4", text: "介绍一个好用的C++日志库Easylogging++", url:"介绍一个好用的C++日志库Easylogging++.html" ,  pid: "CPPBase"},

	{id: "windowsAPI", text: "windowsAPI编程", pid: "cpp"},
		
	{id: "panel", text: "WindowsAPI函数编程C++封装", url:"WindowsAPI函数编程C++封装.html", pid: "windowsAPI"},
	{id: "splitter", text: "常用基础控件的使用",  url:"windows窗口程序中基本控件的使用.html",pid: "windowsAPI"},
        {id: "splitter1", text: "Qt系统中的事件处理机制详解", url:"Qt系统中的事件处理机制及信号与槽的关系.html",pid: "windowsAPI"},
	{id: "splitter2", text: "WIndowsAPI编程中TabControl控件的应用", url:"WIndowsAPI编程中TabControl控件的应用.html",pid: "windowsAPI"},
	
	{ id: "OpenGL", text: "OpenGL三维图形学"},
	
        {id: "BaseOpenGL", text: "三维图形学原理",  pid: "OpenGL" },
		
	{id: "BaseOpenGL1", text: "三维图形学基本变换过程介绍", url:"三维图形学 openGLDiret3D中变换原理.html", pid: "BaseOpenGL" },
        {id: "BaseOpenGL2", text: "坐标变换与齐次矩阵基础概念", url:"坐标变换与齐次矩阵基础概念.html", pid: "BaseOpenGL" },
        {id: "BaseOpenGL3", text: "刚体的姿态表示及坐标变换原理", url:"三维图形学刚体的姿态表示及坐标变换原理.html", pid: "BaseOpenGL" },
        {id: "BaseOpenGL4", text: "四元数表示旋转公式推导过程", url:"四元数表示空间坐标旋转的公式证明 .html", pid: "BaseOpenGL" },	
        {id: "BaseOpenGL5", text: "三维图形学中相机变换矩阵的推导过程", url:"三维图形学中相机变换矩阵的推导过程(以OpenGL为例).html", pid: "BaseOpenGL" },
        {id: "BaseOpenGL6", text: "三维图形学中的透视投影公式", url:"再次推导三维图形学中的透视投影公式.html", pid: "BaseOpenGL" },	
        {id: "BaseOpenGL7", text: "一文读懂三维图形学中的光照模型", url:"一文读懂三维图形学中的光照模型(理论).html", pid: "BaseOpenGL" },
        {id: "BaseOpenGL8", text: "Shader中法向量计算的算法推导", url:"shader中计算法向量的公式详细推导过程 .html", pid: "BaseOpenGL" },
	 {id: "BaseOpenGL9", text: "三维空间中直线、平面方程及三角形交点的计算", url:"三维空间中直线、平面方程及三角形交点的计算.html", pid: "BaseOpenGL" },
	
	{id: "CPPOpenGL", text: "C++版三维图形学原理(OpenGL示例)",  pid: "OpenGL" },
        {id: "CPPOpenGL1", text: "基于windows窗口的OpenGL程序基本框架", url:"基于windows窗口的OpenGL程序基本框架.html", pid: "CPPOpenGL" },
        {id: "CPPOpenGL2", text: "二维空间xoy坐标系中绘制三角形(1)", url:"在二维空间xoy坐标系中绘制三角形_1.html", pid: "CPPOpenGL" },
        {id: "CPPOpenGL3", text: "固定管线下VBO模式绘制三角形", url:"固定管线下VBO模式绘制三角形.html", pid: "CPPOpenGL" },
        {id: "CPPOpenGL4", text: "OpenGL程序中VAO、VBO、EBO相关概念描述", url:"OpenGL程序中VAO、VBO、EBO相关概念描述.html", pid: "CPPOpenGL" },
        {id: "CPPOpenGL5", text: "使用Shader绘制VAO、VBO、EBO类型的三角形", url:"使用Shader绘制VAO、VBO、EBO类型的三角形.html", pid: "CPPOpenGL" },
	    {id: "CPPOpenGL6", text: "相机控制程序演示", url:"OpenGL程序中相机类的设计及观察变换应用.html", pid: "CPPOpenGL" },
         {id: "CPPOpenGL7", text: "物体的空间变换", url:"三维应用程序中物体的空间变换.html", pid: "CPPOpenGL" },
        {id: "CPPOpenGL8", text: "OpenGL三维程序中纹理基本概念与编程实践", url:"OpenGL三维程序中纹理基本概念与编程实践.html", pid: "CPPOpenGL" },
        {id: "CPPOpenGL9", text: "OpenGL光照基础光照模型", url:"OpenGL光照基础光照模型.html", pid: "CPPOpenGL" },
		
	
	{id: "CSharpOpenGL", text: "C#版三维图形学原理(OpenGL示例)", pid: "OpenGL"},
				
	{id: "CSharpOpenGL1", text: "基于OpenTK的C#程序框架", url:"OpenTKFrameWorkApplication.html", pid: "CSharpOpenGL" },
        {id: "CSharpOpenGL2", text: "二维平面物体平移、旋转、缩放过程演示", url:"C_SHARPE语言的OpenGL程序基础框架.html", pid: "CSharpOpenGL" },
        {id: "CSharpOpenGL4", text: "相机控制程序演示", url:"OpenGL三维空间相机变换演示程序.html", pid: "CSharpOpenGL" },
	{id: "CSharpOpenGL3", text: "三维空间物体变换过程演示", url:"三维空间物体变换过程演示.html", pid: "CSharpOpenGL" },
        {id: "CSharpOpenGL5", text: "纹理应用演示程序", url:"纹理应用演示程序.html", pid: "CSharpOpenGL" },
        {id: "CSharpOpenGL6", text: "光照与材质绘制物体演示程序", url:"光照与材质绘制物体演示程序.html", pid: "CSharpOpenGL" },
         {id: "CSharpOpenGL7", text: "读取obj模型文件演示程序", url:"读取obj模型文件演示程序.html", pid: "CSharpOpenGL" },

    { id: "Vulkan", text: "Vulkan学习"},
	{id: "STEPBYSTEP_BASE", text: "STEP-BY-STEP学习Vulkan基础知识入门", pid: "Vulkan"},
	{id: "STEP_1", text: "Step1开发环境及SDK验证", url:"Step1开发环境及SDK验证.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_2", text: "Step2程序基本框架构建", url:"Step2程序基本框架构建.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_3", text: "Step3创建VkInstance实例", url:"Step3创建VkInstance实例.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_4", text: "Step4添加调试信息输出功能", url:"Step4添加调试信息输出功能.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_5", text: "Step5创建VkSurface对象", url:"Step5创建VkSurface对象.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_6", text: "Step6选择物理设备", url:"Step6选择物理设备.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_7", text: "Step7创建逻辑设备", url:"Step7创建逻辑设备.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_8", text: "Step8创建交换链", url:"Step8创建交换链.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_9", text: "Step9创建渲染通道RenderPass对象", url:"Step9创建渲染通道RenderPass对象.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_10", text: "Step10创建VkFrameBuffer对象", url:"Step10创建VkFrameBuffer对象.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_11", text: "Step11创建VkPipeline对象", url:"Step11创建VkPipeline对象.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_12", text: "Step12创建命令缓冲区对象", url:"Step12创建命令缓冲区对象.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_13", text: "Step13创建同步对象", url:"Step13创建同步对象.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_14", text: "Step14实现图形的绘制", url:"Step14实现图形的绘制.html", pid: "STEPBYSTEP_BASE" },
	{id: "STEP_15", text: "Step15响应OnSized事件", url:"Step15响应OnSized事件.html", pid: "STEPBYSTEP_BASE" },
	{id: "VULKAN_CONCEPT", text: "Vulkan系统基础概念", pid: "Vulkan"},
	{id: "CONCEPT_1", text: "使用Volk库简化Vulkan编程", url:"Volk库实现VulkanAPI函数动态载入.html", pid: "VULKAN_CONCEPT" },
        {id: "CONCEPT_2", text: "HPP库对VulkanAPI进行简单包装", url:"HPP库对VulkanAPI进行简单包装.html", pid: "VULKAN_CONCEPT" },
        {id: "CONCEPT_3", text: "Vulkan程序中使用深度缓冲区", url:"Vulkan程序中使用深度缓冲区.html", pid: "VULKAN_CONCEPT" },
        {id: "CONCEPT_4", text: "使用UniformBuffer传递变换矩阵", url:"Vulkan使用UniformBuffer传递变换矩阵.html", pid: "VULKAN_CONCEPT" },
        {id: "CONCEPT_5", text: "顶点索引缓冲区绘制物体", url:"Vulkan中使用顶点索引缓冲区绘制物体.html", pid: "VULKAN_CONCEPT" },
        {id: "CONCEPT_6", text: "Vulkan中应用纹理绘制立方体", url:"Vulkan中应用纹理绘制立方体.html", pid: "VULKAN_CONCEPT" },

	
	{ id: "other", text: "人工智能算法"},
	{id: "otherBase", text: "人工智能算法基础",   pid: "other" },

	{id: "BPCnn", text: "手撕一个AI深度神经网络",url:"手撕一个AI深度神经网络.html", pid:  "otherBase"},
	{id: "APCnn", text: "形象化和抽象化的理解卷积计算", url:"形象化和抽象化的理解卷积计算.html",pid: "otherBase"},				
]


